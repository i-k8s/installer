{{- if .Values.createClusterIssuer -}}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: cluster-issuer-public
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
    "helm.sh/hook-weight": "100"
spec:
  acme:
    # ACME Server
    # prod : https://acme-v02.api.letsencrypt.org/directory
    # staging : https://acme-staging-v02.api.letsencrypt.org/directory
    server: https://acme-v02.api.letsencrypt.org/directory
    # ACME Email address
    email: prajinprakash4u@gmail.com
    privateKeySecretRef:
      name: {{ include "k8s.fullname" . }}-cluster-issuer-public-secret # staging or production
    solvers:
      - http01:
          ingress:
            class: pubing
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  labels:
    {{- include "k8s.labels" . | nindent 4 }}
  name: cluster-issuer-private
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
    "helm.sh/hook-weight": "100"
spec:
  ca:
    secretName: ca-key-pair

{{- end }}
